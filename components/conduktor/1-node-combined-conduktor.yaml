# working:
#  1-node kafka with KRaft mode
#  kafka schema registry
#  conduktor-console
#    manage schema in registry
#    manage/consume/produce topic
#    manage/monitor consumer group

services:
  broker:
    image: apache/kafka-native:3.9.0
    container_name: broker
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_INT://:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INT://broker:19092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.8.0
    hostname: kafka-schema-registry
    container_name: kafka-schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:19092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    depends_on:
      - broker
    healthcheck:
      # https://github.com/confluentinc/schema-registry/issues/1267#issuecomment-1262315466
      test: [ "CMD", "curl", "-f", "http://localhost:8081/subjects" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  postgresql:
    image: postgres:14.15
    hostname: postgresql
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "conduktor-console"
      POSTGRES_USER: "conduktor"
      POSTGRES_PASSWORD: "some_password"
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s

  conduktor-console:
    image: conduktor/conduktor-console:1.30.0
    ports:
      - "8080:8080"
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_DATABASE_URL: "postgresql://conduktor:some_password@postgresql:5432/conduktor-console"
      CDK_CLUSTERS_0_ID: "default"
      CDK_CLUSTERS_0_NAME: "My Local Kafka Cluster"
      CDK_CLUSTERS_0_COLOR: "#0013E7"
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "PLAINTEXT://broker:19092"
      CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://kafka-schema-registry:8081"
      # TODO: Set up confluentinc:cp-kafka-connect container
      # https://github.com/conduktor/kafka-stack-docker-compose/blob/v7.2.0/full-stack.yml#L73-L112
      # CDK_CLUSTERS_0_KAFKACONNECTS_0_URL: "http://kafka-connect:8083"
      # CDK_CLUSTERS_0_KAFKACONNECTS_0_NAME: "full stack kafka connect"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/api/health/live" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    depends_on:
      broker:
        condition: service_started
      postgresql:
        condition: service_healthy
      kafka-schema-registry:
        condition: service_healthy

volumes:
  pg_data: { }
  conduktor_data: { }
